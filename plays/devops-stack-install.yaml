# K8s
- import_playbook: ./k8s/install.yaml

# MetalLB
- import_playbook: ./metallb-install.yaml

# NFS Storage
- hosts: k8sworkers, k8scontrollers
  remote_user: "{{user}}"
  roles:
    - role: ../roles/nfs-utils
      message: Installing nfs-utils package
      become: true
      become_method: sudo
- hosts: k8scontrollers[0]
  remote_user: "{{user}}"
  roles:
    - role: ../roles/nfs-provisioner
      serverIp: "{{ nfsServerIp }}"
      volumePath: "{{ nfsVolumePath }}"
      storageClassDefinition: "{{ lookup('file', '{{ nfsStorageClassPath }}' ) }}"
      message: Installing NFS Provisioner

# Certificate Manager
- hosts: k8scontrollers[0]
  remote_user: "{{user}}"
  roles:
    - role: ../roles/jq
      message: Install jq
      become: true
      become_method: sudo
    - role: ../roles/cert-manager
      message: Installing Cert-Manager
      vars:
        version: "{{certManagerVersion}}"
    - role: ../roles/ca-create
      message: Creating self signed certificate authority
    - role: ../roles/self-signed-issuer-create
      message: Creating self signed cert-manager issuer
    - role: ../roles/lets-encrypt-issuer-create
      issuerYaml: "{{ lookup('file', '{{ certManagerIssuersPath }}' ) }}"
      message: Creating lets-encrypt cert-manager issuer
    - role: ../roles/get-self-signed-cert
      message: Getting self signed cert
      certificateName: "{{ selfSignedCertificateName }}"

- hosts: k8scontrollers, k8sworkers
  remote_user: "{{user}}"
  roles:
    - role: ../roles/ca-trust
      message: Trusting CA Certificate
      certificateName: "{{ selfSignedCertificateName }}"
      become: true
      become_method: sudo

# Nginx Ingress
- hosts: k8sworkers, k8scontrollers
  remote_user: "{{user}}"
  roles:
    - role: ../roles/ingress-nginx-ports
      message: Opening Ports for Ingress NGINX
      become: true
      become_method: sudo
- hosts: k8scontrollers[0]
  remote_user: "{{user}}"
  roles:
    - role: ../roles/ingress-nginx
      message: Installing External Ingress NGINX
      vars:
        chartVersion: "{{ ingressNginxChartVerision }}"
        ingressName: ingress-nginx-{{externalIngressName}}
        ingressNamespace: ingress-nginx-{{externalIngressName}}
        ingressClass: nginx-{{externalIngressName}}
    - role: ../roles/ingress-nginx
      message: Installing Internal Ingress NGINX
      vars:
        chartVersion: "{{ ingressNginxChartVerision }}"
        ingressName: ingress-nginx-{{internalIngressName}}
        ingressNamespace: ingress-nginx-{{internalIngressName}}
        ingressClass: nginx-{{internalIngressName}}