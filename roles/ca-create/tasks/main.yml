---
# tasks file for ca-create

- name: Get existing secret object
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: "{{ secretName }}"
    namespace: "{{ secretNamespace }}"
  register: ca_secret
  environment:
    KUBECONFIG: "/home/{{user|mandatory}}/.kube/config"

- block:  
  - name: Create Namespace
    kubernetes.core.k8s:
      state: present
      definition:
        api_version: v1
        kind: Namespace
        metadata:
          name: cert-manager
          labels:
            pod-security.kubernetes.io/enforce: privileged
            pod-security.kubernetes.io/audit: privileged
            pod-security.kubernetes.io/warn: privileged
            app.kubernetes.io/managed-by: Helm
          annotations:
            meta.helm.sh/release-name: service-catalog
            meta.helm.sh/release-namespace: argo-cd
    environment:
      KUBECONFIG: "/home/{{user}}/.kube/config"

  - name: Generate Openssl Key
    ansible.builtin.command:
      cmd: openssl genrsa -out ca.key 4096

  - name: Generate Openssl Crt
    ansible.builtin.command:
      cmd: openssl req -new -x509 -sha256 -days 10950 -key ca.key -out ca.crt -subj "/C=US/ST=New Hampshire/L=Weare/O=Roeden/OU=Devops/CN=roeden.corp"

  - name: Slurp Openssl Key
    ansible.builtin.slurp:
      src: ca.key
    register: ca_key

  - name: Slurp Openssl Crt
    ansible.builtin.slurp:
      src: ca.crt
    register: ca_crt

  - name: Create Secret
    kubernetes.core.k8s:
      state: present
      definition:
        api_version: v1
        kind: Secret
        metadata:
          name: "{{ secretName }}"
          namespace: "{{ secretNamespace }}"
        type: Opaque
        data:
          tls.crt: "{{ ca_crt.content }}"
          tls.key: "{{ ca_key.content }}"
    environment:
      KUBECONFIG: "/home/{{user|mandatory}}/.kube/config"  
    
  - name: Cleanup Key File
    ansible.builtin.file:
      path: ca.key
      state: absent

  
  - name: Cleanup Crt File
    ansible.builtin.file:
      path: ca.crt
      state: absent

  when: 
    - ca_secret.resources | length == 0

- name: Get CA Crt Secret
  ansible.builtin.shell:
    cmd: "kubectl get secret {{ secretName }} -n {{ secretNamespace }} -o jsonpath='{.data}' | jq -r '.\"tls.crt\"' | base64 -d"
  register: ca_crt_from_secret
  environment:
    KUBECONFIG: "/home/{{user|mandatory}}/.kube/config"

- name: "Add CA CRT to dummy host"
  ansible.builtin.add_host:
   name: "CA_CRT"
   cmd: "{{ ca_crt_from_secret.stdout }}"