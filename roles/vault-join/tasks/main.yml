---
# tasks file for vault-join

# block:
#   - name: Register vault status
#     ansible.builtin.shell:
#       cmd: kubectl exec --stdin=true --tty=true --namespace='{{ k8sNamespaceName }}' vault-0 -- vault status
#     register: vault_status
#     ignore_errors: true
#     no_log: true
#     environment:
#       KUBECONFIG: "/home/{{user}}/.kube/config"

#   - name: Create output file
#     ansible.builtin.copy:
#       content: "{{ vault_status.stdout }}"
#       dest: "/home/{{user}}/vault_status.txt"

#   - name: Register vault join status
#     ansible.builtin.shell:
#       cmd: "cat /home/{{user}}/vault_status.txt | perl -n -e'/Sealed[ \t]+(.*)$/ && print $1'"
#     register: seal_status
#     environment:
#       KUBECONFIG: "/home/{{user}}/.kube/config"

#   - name: Remove temp file
#     ansible.builtin.file:
#       path: "/home/{{user}}/vault_status.txt"
#       state: absent

  # loop:
  #   - vault-1
  #   - vault-2
  #   - vault-3
  #   - vault-4

# - name: Create output file
#   ansible.builtin.copy:
#     content: "{{ vault_status.stdout }}"
#     dest: "/home/{{user}}/vault_status.txt"



# - name: status
#   ansible.builtin.debug:
#    msg: "{{vault_status.stdout}}"

# - name: seal
#   ansible.builtin.debug:
#    msg: "{{seal_status.stdout}}"

# - block:

#   - name: Get Unseal Key 1
#     ansible.builtin.shell:
#       cmd: "kubectl get secret unseal-keys -n {{ k8sNamespaceName }} -o jsonpath='{.data}' | jq -r '.\"unseal1.key\"' | base64 -d"
#     register: unseal_key_1
#     environment:
#       KUBECONFIG: "/home/{{user|mandatory}}/.kube/config"

#   - name: Get Unseal Key 2
#     ansible.builtin.shell:
#       cmd: "kubectl get secret unseal-keys -n {{ k8sNamespaceName }} -o jsonpath='{.data}' | jq -r '.\"unseal2.key\"' | base64 -d"
#     register: unseal_key_2
#     environment:
#       KUBECONFIG: "/home/{{user|mandatory}}/.kube/config"

#   - name: Get Unseal Key 3
#     ansible.builtin.shell:
#       cmd: "kubectl get secret unseal-keys -n {{ k8sNamespaceName }} -o jsonpath='{.data}' | jq -r '.\"unseal3.key\"' | base64 -d"
#     register: unseal_key_3
#     environment:
#       KUBECONFIG: "/home/{{user|mandatory}}/.kube/config"

  - name: Join Vault 
    ansible.builtin.command:
      cmd: kubectl exec --stdin=true --tty=true --namespace='{{ k8sNamespaceName }}' vault-{{ item }} -- vault operator raft join {{ initialLeaderHostname | mandatory}}
    environment:
      KUBECONFIG: "/home/{{user}}/.kube/config"
    loop: "{{ range(1, replicaCount | mandatory | int ) | list }}"

  # when:
  #   - seal_status.stdout == 'true' # only do this block when we are sealed